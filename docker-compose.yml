version: '3.8'

services:
  # Main arbitrage application
  arbitrage:
    build: .
    container_name: fast-arb
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=INFO
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    command: python main.py run --monitor-only
    networks:
      - arbitrage-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and data storage
  redis:
    image: redis:7-alpine
    container_name: fast-arb-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - arbitrage-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring dashboard (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: fast-arb-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - arbitrage-network
    profiles:
      - monitoring

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: fast-arb-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - arbitrage-network
    profiles:
      - monitoring

networks:
  arbitrage-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local